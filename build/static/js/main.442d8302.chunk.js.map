{"version":3,"sources":["components/Navigation/Navigation.js","components/Logo/racoon.png","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognition/FaceRecognition.js","components/Rank/Rank.js","components/SignIn/SignIn.js","components/SignUp/SignUp.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","onSubmitSignOut","props","onClickSign","style","display","justifyContent","onClick","this","className","id","Component","Logo","options","max","height","width","src","racoon","alt","ImageLinkForm","onInputChange","onButtonSubmit","flexDirection","type","onChange","cursor","FaceRecognition","image","box","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Rank","name","entries","SignIn","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","alert","onSubmitSignUp","SignUp","onNameChange","signUpName","signUpEmail","signUpPassword","OnSubmitSignUp","catch","console","log","particlesOption","Clarifai","App","apiKey","particles","number","density","enable","value_area","data","joined","something","route","imageURL","input","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","document","getElementById","widthImage","Number","heightImage","top_row","right_col","bottom_row","left_col","displayFaceBox","count","Object","assign","err","signInForm","signUpForm","mainPage","params","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.442d8302.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Navigation extends Component {\n\n\tonSubmitSignOut = () => {\n\t\tthis.props.onClickSign(\"signout\")\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<nav style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n\t\t\t\t<p onClick={ this.onSubmitSignOut } \n\t\t\t\t   className=\"f3 link dim black underline pa3 pointer\" \n\t\t\t\t   id=\"signout\">\n\t\t\t\t   \tSign out\n\t\t\t\t</p>\n\t\t\t</nav>\n\t\t);\t\t\n\t}\n}\n\nexport default Navigation;","export default __webpack_public_path__ + \"static/media/racoon.5d7beaa6.png\";","import React from 'react';\nimport Tilt from 'react-tilt';\nimport racoon from './racoon.png';\n\nconst Logo = () => {\n\treturn(\n\t\t<div className=\"mt0 center\">\n\t\t\t<Tilt className=\"mb6 Tilt\" \n\t\t\t\t  options={{ max : 25 }} \n\t\t\t\t  style={{ height: 150, width: 150 }} >\n\t\t\t\t<div className=\"Tilt-inner\">\n\t\t\t\t \t<img src={racoon} alt=\"img\"/> \n\t\t\t\t</div>\n\t\t\t</Tilt>\t\t\t\n\t\t</div>\n\t);\n}\n\nexport default Logo;","import React from 'react';\n\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\n\treturn(\n\t\t<div className=\"center\" style={{display: \"flex\", flexDirection: \"column\"}}>\n\t\t\t<p className=\"f3 center\" >\n\t\t\t\t{ \"Racoon that detects faces\" }\n\t\t\t</p>\n\t\t\t<div className=\"pa4 br3 shadow-5 center form\" >\n\t\t\t\t<input className=\"f4 pa2 w-70 center\" \n\t\t\t\t\t   type=\"text\" \n\t\t\t\t\t   onChange={ onInputChange }\n\t\t\t\t/>\n\t\t\t\t<button className=\"w-30 grow f4 link ph3 pv2 dib white bg-purple\" \n\t\t\t\t\t\tstyle={{cursor: \"pointer\"}} \n\t\t\t\t\t\tonClick={ onButtonSubmit }>\n\t\t\t\t\t\t\tDetect\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default ImageLinkForm;","import React from 'react';\nimport './FaceRecognition.css';\n\nconst FaceRecognition = ({ image, box }) => {\n\treturn(\n\t\t<div className=\"center ma\">\n\t\t\t<div className=\"absolute mt2\">\n\t\t\t\t<img id=\"image\" src={ image } \n\t\t\t\t\t alt=\"\" \n\t\t\t\t\t height=\"200px\" \n\t\t\t\t\t width=\"auto\" \n\t\t\t\t\t className=\"center\" \n\t\t\t\t/>\n\t\t\t\t<div className=\"bounding-box\" \n\t\t\t\t\t style={{ top: box.topRow, \n\t\t\t\t\t \t\t  right: box.rightCol, \n\t\t\t\t\t \t\t  bottom: box.bottomRow , \n\t\t\t\t\t \t\t  left: box.leftCol \n\t\t\t\t\t \t   }}>\n\t\t\t\t</div>\n\t\t\t</div>\t\t\t\n\t\t</div>\n\t);\n}\n\nexport default FaceRecognition;","import React from 'react';\n\nconst Rank = ({ name, entries }) => {\n\treturn(\n\t\t<div className=\"white\">\n\t\t\t<div className=\"f3 center\">\n\t\t\t\t{`Hello ${name}, your current entry count is...`}\n\t\t\t</div>\n\t\t\t<div className=\"f1 center\">\n\t\t\t\t{ entries }\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Rank;","import React, { Component } from \"react\";\n\nclass SignIn extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsignInEmail: \"\",\n\t\t\tsignInPassword: \"\"\n\t\t}\n\t}\n\n\tonEmailChange = (event) => {\n\t\tthis.setState({ signInEmail: event.target.value })\n\t}\n\n\tonPasswordChange = (event) => {\n\t\tthis.setState({ signInPassword: event.target.value })\n\t}\n\n\tonSubmitSignIn = () => {\n\t\tfetch('https://immense-sierra-90858.herokuapp.com/signin', {\n\t\t\tmethod: 'post',\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tbody: JSON.stringify({\n\t\t\t\temail: this.state.signInEmail,\n\t\t\t\tpassword: this.state.signInPassword\n\t\t\t})\n\t\t})\n        .then(response => response.json())\n        .then(user => {\n        \tif(user.id){\n        \t\tthis.props.loadUser(user);\n          \t\tthis.props.onClickSign(\"signin\");\n        \t} else {\n\t\t\t\talert(\"Email and/or password incorrect. Try again!\");\n\t\t\t}\t\n\t\t})\n\t}\n\n\tonSubmitSignUp = () => {\n\t\tthis.props.onClickSign(\"signup\")\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<nav style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n\t\t\t\t\t<p onClick={ this.onSubmitSignUp } \n\t\t\t\t\t   className=\"f3 link dim black underline pa3 pointer\" \n\t\t\t\t\t   id=\"signup\">\n\t\t\t\t\t   \tSign Up\n\t\t\t\t\t</p>\n\t\t\t\t</nav>\t\n\t\t\t\t<div className=\"center ma4\">\n\t\t\t\t\t<main className=\"br3 pa4 black-80 center shadow-1\">\n\t\t\t\t\t  <form className=\"measure\">\n\t\t\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n\t\t\t\t\t      <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\n\t\t\t\t\t      <div className=\"mt3\">\n\t\t\t\t\t        <label className=\"db fw6 lh-copy f6\" type=\"email\">Email</label>\n\t\t\t\t\t        <input \n\t\t\t\t\t        \tclassName=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n\t\t\t\t\t        \ttype=\"email\" \n\t\t\t\t\t        \tname=\"email-address\"  \n\t\t\t\t\t        \tid=\"email-address\"\n\t\t\t\t\t        \tonChange={ this.onEmailChange } \n\t\t\t\t\t        />\n\t\t\t\t\t      </div>\n\t\t\t\t\t      <div className=\"mv3\">\n\t\t\t\t\t        <label className=\"db fw6 lh-copy f6\" type=\"password\">Password</label>\n\t\t\t\t\t        <input \n\t\t\t\t\t        \tclassName=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n\t\t\t\t\t        \ttype=\"password\" \n\t\t\t\t\t        \tname=\"password\"  \n\t\t\t\t\t        \tid=\"password\"\n\t\t\t\t\t        \tonChange={ this.onPasswordChange }\n\t\t\t\t\t        />\n\t\t\t\t\t      </div>\n\t\t\t\t\t    </fieldset>\n\t\t\t\t\t    <div className=\"\">\n\t\t\t\t\t      <input \n\t\t\t\t\t        onClick={ this.onSubmitSignIn } \n\t\t\t\t\t      \tclassName=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \n\t\t\t\t\t      \ttype=\"button\" \n\t\t\t\t\t      \tvalue=\"Sign in\" \n\t\t\t\t\t      \tid=\"signin\" \n\t\t\t\t\t      />\n\t\t\t\t\t    </div>\n\t\t\t\t\t  </form>\n\t\t\t\t\t</main>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\t\t\n\t}\n}\n\nexport default SignIn;","import React, { Component } from 'react';\n\nclass SignUp extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tsignUpName: \"\",\n\t\t\tsignUpEmail: \"\",\n\t\t\tsignUpPassword: \"\"\n\t\t} \n\t}\n\n\tonNameChange = (event) => {\n\t\tthis.setState({ signUpName: event.target.value })\n\t}\n\n\tonEmailChange = (event) => {\n\t\tthis.setState({ signUpEmail: event.target.value })\n\t}\n\n\tonPasswordChange = (event) => {\n\t\tthis.setState({ signUpPassword: event.target.value })\n\t}\n\n\tonSubmitSignIn = () => {\n\t\tthis.props.onClickSign(\"signout\")\n\t}\n\n\tOnSubmitSignUp = () => {\n\t\tfetch('https://immense-sierra-90858.herokuapp.com/signup', {\n\t\t\tmethod: 'post',\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tbody: JSON.stringify({\n\t\t\t\tname: this.state.signUpName,\n\t\t\t\temail: this.state.signUpEmail,\n\t\t\t\tpassword: this.state.signUpPassword\n\t\t\t})\n\t\t})\n\t\t.then(response => response.json())\n\t\t.then(user => {\n\t\t\tif (user.id) {\n\t\t\t\tthis.props.loadUser(user)\n\t\t\t\tthis.props.onClickSign(\"signin\")\t\t\t\n\t\t\t}\n\t\t})\n\t\t.catch(console.log);\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<nav style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n\t\t\t\t\t<p onClick={ this.onSubmitSignIn } \n\t\t\t\t\t   className=\"f3 link dim black underline pa3 pointer\" \n\t\t\t\t\t   id=\"signout\">\n\t\t\t\t\t   \tSign In\n\t\t\t\t\t</p>\n\t\t\t\t</nav>\t\n\t\t\t\t<div className=\"center ma4\">\n\t\t\t\t\t<main className=\"br3 pa4 black-80 center shadow-1\">\n\t\t\t\t\t  <form className=\"measure\">\n\t\t\t\t\t    <fieldset id=\"sign_up\" \n\t\t\t\t\t    \t\t  className=\"ba b--transparent ph0 mh0\">\n\t\t\t\t\t      <legend className=\"f1 fw6 ph0 mh0\">Sign Up</legend>\n\t\t\t\t\t      <div className=\"mt3\">\n\t\t\t\t\t        <label className=\"db fw6 lh-copy f6\" type=\"text\">Full name</label>\n\t\t\t\t\t        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n\t\t\t\t\t        \t   type=\"text\" \n\t\t\t\t\t        \t   name=\"fullName\"  \n\t\t\t\t\t        \t   id=\"fullName\"\n\t\t\t\t\t        \t   onChange={ this.onNameChange }\n\t\t\t\t\t       \t/>\n\t\t\t\t\t      </div>\n\t\t\t\t\t      <div className=\"mt3\">\n\t\t\t\t\t        <label className=\"db fw6 lh-copy f6\" type=\"email\">Email</label>\n\t\t\t\t\t        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n\t\t\t\t\t        \t   type=\"email\" \n\t\t\t\t\t        \t   name=\"email-address\"  \n\t\t\t\t\t        \t   id=\"email-address\" \n\t\t\t\t\t        \t   onChange={ this.onEmailChange }\n\t\t\t\t\t       \t/>\n\t\t\t\t\t      </div>\n\t\t\t\t\t      <div className=\"mv3\">\n\t\t\t\t\t        <label className=\"db fw6 lh-copy f6\" type=\"password\">Password</label>\n\t\t\t\t\t        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n\t\t\t\t\t        \t   type=\"password\" \n\t\t\t\t\t        \t   name=\"password\"  \n\t\t\t\t\t        \t   id=\"password\"\n\t\t\t\t\t        \t   onChange={ this.onPasswordChange }\n\t\t\t\t\t        />\n\t\t\t\t\t      </div>\n\t\t\t\t\t    </fieldset>\n\t\t\t\t\t    <div className=\"\">\n\t\t\t\t\t      <input onClick={ this.OnSubmitSignUp } \n\t\t\t\t\t      \t\t className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \n\t\t\t\t\t      \t\t type=\"button\" \n\t\t\t\t\t      \t\t value=\"Sign up\" \n\t\t\t\t\t      \t\t id=\"signup\" \n\t\t\t\t\t      />\n\t\t\t\t\t    </div>\n\t\t\t\t\t  </form>\n\t\t\t\t\t</main>\n\t\t\t\t</div>\n\t\t\t</div>\t\n\t\t)\t\t\n\t}\n}\n\nexport default SignUp;","import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport \"tachyons\";\nimport Particles from 'react-particles-js';\nimport Rank from './components/Rank/Rank';\nimport SignIn from './components/SignIn/SignIn';\nimport SignUp from './components/SignUp/SignUp';\nimport Clarifai from 'clarifai';\n\nconst app = new Clarifai.App({\n  apiKey: 'a5859fd113154c43a55a9bd841ca1987'\n});\n\nconst particlesOption = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 120,\n      }\n    }\n  }\n}\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {\n      input: \"\",\n      imageURL: \"\",\n      box: {},\n      route: \"signout\",\n      user: {\n        id: \"\",\n        name: \"\",\n        email: \"\",\n        entries: 0,\n        joined: \"\"\n      }\n    }\n  }\n\n  loadUser = (data) => {\n    this.setState({ user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n      }\n    })\n  }\n\n  onClickSign = (something) => {\n    something === \"signout\"?\n      this.setState({ route: \"signout\", imageURL: \"\" }):\n      (something === \"signin\"?\n        this.setState({ route: \"signin\" }):\n        this.setState({ route: \"signup\" })) \n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value })\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById(\"image\");\n    const widthImage = Number(image.width);\n    const heightImage = Number(image.height);    \n\n    return {\n      topRow: clarifaiFace.top_row * heightImage,\n      rightCol: widthImage - (clarifaiFace.right_col * widthImage),\n      bottomRow: heightImage - (clarifaiFace.bottom_row * heightImage),\n      leftCol: clarifaiFace.left_col * widthImage, \n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({ box: box })\n  } \n\n  onButtonSubmit = (event) => {\n    this.setState({ imageURL: this.state.input })\n      fetch('https://immense-sierra-90858.herokuapp.com/imageurl', {\n        method: 'post',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          input: this.state.input\n        })            \n      })\n      .then(response => response.json())\n      .then(response => {\n        if(response) {\n          fetch('https://immense-sierra-90858.herokuapp.com/image', {\n            method: 'put',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })            \n          })\n          .then(response => response.json())\n          .then(count => {\n            this.setState(Object.assign(this.state.user, { entries: count })\n            )\n          })\n          .catch(console.log);\n        }\n          this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(\"Error\", err))\n  }\n \n  signInForm = () => {\n    return(\n      <div>\n        <SignIn loadUser={this.loadUser} onClickSign={ this.onClickSign }/>\n      </div>  \n    );\n  }\n\n  signUpForm = () => {\n    return(\n      <div>\n        <SignUp loadUser={ this.loadUser } onClickSign={ this.onClickSign }/>              \n      </div>\n    );\n  }\n\n  mainPage = () => {\n    const { box, imageURL } = this.state;\n    return(\n      <div>\n        <Navigation onClickSign={ this.onClickSign }/>\n        <Logo />\n        <Rank name={this.state.user.name} entries={this.state.user.entries} />\n        <ImageLinkForm onInputChange={ this.onInputChange } onButtonSubmit={ this.onButtonSubmit }/>\n        <FaceRecognition box={ box }image={ imageURL }/>                  \n      </div>\n    )\n  }\n\n  render(){\n    const { route } = this.state;\n    return(\n      <div style={{display: \"flex\", flexDirection: \"column\"}}>\n        <div>\n          <Particles className=\"particles\" params={ particlesOption } />\n          {\n            route === \"signin\" ?\n            this.mainPage() :\n            (route === \"signout\"? this.signInForm(): this.signUpForm())    \n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}