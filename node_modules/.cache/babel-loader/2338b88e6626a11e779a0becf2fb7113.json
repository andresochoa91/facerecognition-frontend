{"ast":null,"code":"var _jsxFileName = \"/home/andres/Desktop/facerecognition/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport \"tachyons\";\nimport Particles from 'react-particles-js';\nimport Rank from './components/Rank/Rank';\nimport Clarifai from 'clarifai';\nconst app = new Clarifai.App({\n  apiKey: 'a5859fd113154c43a55a9bd841ca1987'\n});\nconst particlesOption = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 200\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      console.log(clarifaiFace);\n      const image = document.getElementById(\"image\");\n      const widthImage = Number(image.width);\n      const heightImage = Number(image.height);\n      console.log(heightImage, widthImage);\n      console.log(clarifaiFace.top_row * widthImage);\n      console.log(clarifaiFace.right_col * widthImage);\n      console.log(clarifaiFace.bottom_row * widthImage);\n      console.log(clarifaiFace.left_col * widthImage);\n      return {\n        topRow: clarifaiFace.top_row,\n        rightCol: clarifaiFace.right_col * widthImage,\n        bottomRow: clarifaiFace.bottom_row * widthImage,\n        left_col: clarifaiFace.left_col * widthImage\n      };\n    };\n\n    this.onButtonSubmit = event => {\n      this.setState({\n        imageURL: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.calculateFaceLocation(response)).catch(err => console.log(\"Error\", err));\n    };\n\n    this.state = {\n      input: \"\",\n      imageURL: \"\",\n      box: {}\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOption,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      image: this.state.imageURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/andres/Desktop/facerecognition/src/App.js"],"names":["React","Component","Navigation","Logo","ImageLinkForm","FaceRecognition","Particles","Rank","Clarifai","app","App","apiKey","particlesOption","particles","number","value","density","enable","value_area","constructor","onInputChange","event","setState","input","target","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","console","log","image","document","getElementById","widthImage","Number","width","heightImage","height","top_row","right_col","bottom_row","left_col","topRow","rightCol","bottomRow","onButtonSubmit","imageURL","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","box","render","display","flexDirection"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport \"tachyons\";\nimport Particles from 'react-particles-js';\nimport Rank from './components/Rank/Rank';\nimport Clarifai from 'clarifai';\n\nconst app = new Clarifai.App({\n apiKey: 'a5859fd113154c43a55a9bd841ca1987'\n});\n\nconst particlesOption = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 200,\n      }\n    }\n  }\n}\n\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {\n      input: \"\",\n      imageURL: \"\",\n      box: {},\n    }\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value})\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    console.log(clarifaiFace);\n    const image = document.getElementById(\"image\");\n    const widthImage = Number(image.width);\n    const heightImage = Number(image.height);\n    console.log(heightImage, widthImage);\n    console.log(clarifaiFace.top_row * widthImage);\n    console.log(clarifaiFace.right_col * widthImage);\n    console.log(clarifaiFace.bottom_row * widthImage);\n    console.log(clarifaiFace.left_col * widthImage);    \n\n    return {\n      topRow: clarifaiFace.top_row,\n      rightCol: clarifaiFace.right_col * widthImage,\n      bottomRow: clarifaiFace.bottom_row * widthImage,\n      left_col: clarifaiFace.left_col * widthImage \n    }\n\n  }\n\n  onButtonSubmit = (event) => {\n    this.setState({ imageURL: this.state.input })\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then(response => this.calculateFaceLocation(response))\n      .catch(err => console.log(\"Error\", err))\n  }\n\n  render(){\n    return(\n      <div style={{display: \"flex\", flexDirection: \"column\"}}>\n        <Particles className=\"particles\" params={ particlesOption } />\n        <Navigation />\n        <Logo />\n        <Rank />\n        <ImageLinkForm onInputChange={ this.onInputChange } onButtonSubmit={ this.onButtonSubmit }/>\n        <FaceRecognition image={ this.state.imageURL }/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}