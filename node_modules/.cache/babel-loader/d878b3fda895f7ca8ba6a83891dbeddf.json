{"ast":null,"code":"var _jsxFileName = \"/home/andres/Desktop/javascriptfolder/JavaScript/ReactJS/facerecognition/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport \"tachyons\";\nimport Particles from 'react-particles-js';\nimport Rank from './components/Rank/Rank';\nimport Clarifai from 'clarifai';\nimport SignIn from './components/SignIn/SignIn';\nimport SignUp from './components/SignUp/SignUp';\nconst app = new Clarifai.App({\n  apiKey: 'a5859fd113154c43a55a9bd841ca1987'\n});\nconst particlesOption = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 120\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.onClickSign = something => {\n      something === \"signout\" ? this.setState({\n        route: \"signout\"\n      }) : something === \"signin\" ? this.setState({\n        route: \"signin\"\n      }) : this.setState({\n        route: \"signup\"\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById(\"image\");\n      const widthImage = Number(image.width);\n      const heightImage = Number(image.height);\n      return {\n        topRow: clarifaiFace.top_row * heightImage,\n        rightCol: widthImage - clarifaiFace.right_col * widthImage,\n        bottomRow: heightImage - clarifaiFace.bottom_row * heightImage,\n        leftCol: clarifaiFace.left_col * widthImage\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onButtonSubmit = event => {\n      this.setState({\n        imageURL: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.displayFaceBox(this.calculateFaceLocation(response))).catch(err => console.log(\"Error\", err));\n    };\n\n    this.signInForm = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(SignIn, {\n        onClickSign: this.onClickSign,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }));\n    };\n\n    this.signUpForm = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(SignUp, {\n        onClickSign: this.onClickSign,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }));\n    };\n\n    this.mainPage = () => {\n      const _this$state = this.state,\n            box = _this$state.box,\n            imageURL = _this$state.imageURL;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Navigation, {\n        onClickSign: this.onClickSign,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(Logo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(Rank, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(FaceRecognition, {\n        box: box,\n        image: imageURL,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }));\n    };\n\n    this.state = {\n      input: \"\",\n      imageURL: \"\",\n      box: {},\n      route: \"signout\",\n      user: {\n        id: \"\",\n        name: \"\",\n        email: \"\",\n        entries: 0,\n        joined: \"\"\n      }\n    };\n  } //  componentDidMount() {\n  //    fetch('http://localhost:3000/')\n  //      .then(response => response.json())\n  //      .then(console.log)\n  //  }\n\n\n  render() {\n    const route = this.state.route;\n    return React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOption,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), route === \"signin\" ? this.mainPage() : route === \"signout\" ? this.signInForm() : this.signUpForm()));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/andres/Desktop/javascriptfolder/JavaScript/ReactJS/facerecognition/frontend/src/App.js"],"names":["React","Component","Navigation","Logo","ImageLinkForm","FaceRecognition","Particles","Rank","Clarifai","SignIn","SignUp","app","App","apiKey","particlesOption","particles","number","value","density","enable","value_area","constructor","loadUser","data","setState","user","id","name","email","entries","joined","onClickSign","something","route","onInputChange","event","input","target","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","widthImage","Number","width","heightImage","height","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","leftCol","left_col","displayFaceBox","box","onButtonSubmit","imageURL","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","log","signInForm","signUpForm","mainPage","render","display","flexDirection"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport \"tachyons\";\nimport Particles from 'react-particles-js';\nimport Rank from './components/Rank/Rank';\nimport Clarifai from 'clarifai';\nimport SignIn from './components/SignIn/SignIn';\nimport SignUp from './components/SignUp/SignUp';\n\n\nconst app = new Clarifai.App({\n  apiKey: 'a5859fd113154c43a55a9bd841ca1987'\n});\n\nconst particlesOption = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 120,\n      }\n    }\n  }\n}\n\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {\n      input: \"\",\n      imageURL: \"\",\n      box: {},\n      route: \"signout\",\n      user: {\n        id: \"\",\n        name: \"\",\n        email: \"\",\n        entries: 0,\n        joined: \"\"\n      }\n    }\n  }\n\n//  componentDidMount() {\n//    fetch('http://localhost:3000/')\n//      .then(response => response.json())\n//      .then(console.log)\n//  }\n\n  loadUser = (data) => {\n    this.setState({ user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n      }\n    })\n  }\n\n  onClickSign = (something) => {\n    something === \"signout\"?\n      this.setState({ route: \"signout\" }):\n      (something === \"signin\"?\n        this.setState({ route: \"signin\" }):\n        this.setState({ route: \"signup\" })) \n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value })\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById(\"image\");\n    const widthImage = Number(image.width);\n    const heightImage = Number(image.height);    \n\n    return {\n      topRow: clarifaiFace.top_row * heightImage,\n      rightCol: widthImage - (clarifaiFace.right_col * widthImage),\n      bottomRow: heightImage - (clarifaiFace.bottom_row * heightImage),\n      leftCol: clarifaiFace.left_col * widthImage, \n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({ box: box })\n  } \n\n  onButtonSubmit = (event) => {\n    this.setState({ imageURL: this.state.input })\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n      .catch(err => console.log(\"Error\", err))\n  }\n \n  signInForm = () => {\n    return(\n      <div>\n        <SignIn onClickSign={ this.onClickSign }/>\n      </div>  \n    );\n  }\n\n  signUpForm = () => {\n    return(\n      <div>\n        <SignUp onClickSign={ this.onClickSign }/>              \n      </div>\n    );\n  }\n\n  mainPage = () => {\n    const { box, imageURL } = this.state;\n    return(\n      <div>\n        <Navigation onClickSign={ this.onClickSign }/>\n        <Logo />\n        <Rank />\n        <ImageLinkForm onInputChange={ this.onInputChange } onButtonSubmit={ this.onButtonSubmit }/>\n        <FaceRecognition box={ box }image={ imageURL }/>                  \n      </div>\n    )\n  }\n\n  render(){\n    const { route } = this.state;\n    return(\n      <div style={{display: \"flex\", flexDirection: \"column\"}}>\n        <div>\n          <Particles className=\"particles\" params={ particlesOption } />\n          {\n            route === \"signin\"?\n               this.mainPage():\n               (route === \"signout\"? this.signInForm(): this.signUpForm())    \n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}