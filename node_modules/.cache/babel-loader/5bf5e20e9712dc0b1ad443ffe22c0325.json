{"ast":null,"code":"var _jsxFileName = \"/home/andres/Desktop/facerecognition/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport \"tachyons\";\nimport Particles from 'react-particles-js';\nimport Rank from './components/Rank/Rank';\nimport Clarifai from 'clarifai';\nimport SignIn from './components/SignIn/SignIn';\nconst app = new Clarifai.App({\n  apiKey: 'a5859fd113154c43a55a9bd841ca1987'\n});\nconst particlesOption = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 200\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.pushed = event => {\n      this.state.route === \"signin\" ? this.setState({\n        route: \"signedin\"\n      }) : this.setState({\n        route: \"signin\"\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      console.log(clarifaiFace);\n      const image = document.getElementById(\"image\");\n      const widthImage = Number(image.width);\n      const heightImage = Number(image.height);\n      return {\n        topRow: clarifaiFace.top_row * heightImage,\n        rightCol: widthImage - clarifaiFace.right_col * widthImage,\n        bottomRow: heightImage - clarifaiFace.bottom_row * heightImage,\n        leftCol: clarifaiFace.left_col * widthImage\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onButtonSubmit = event => {\n      this.setState({\n        imageURL: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.displayFaceBox(this.calculateFaceLocation(response))).catch(err => console.log(\"Error\", err));\n    };\n\n    this.logIn = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Navigation, {\n        pushed: this.pushed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(Particles, {\n        className: \"particles\",\n        params: particlesOption,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(Logo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(Rank, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(FaceRecognition, {\n        box: this.state.box,\n        image: this.state.imageURL,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }));\n    };\n\n    this.logOut = () => {\n      return React.createElement(SignIn, {\n        pushed: this.pushed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      });\n    };\n\n    this.state = {\n      input: \"\",\n      imageURL: \"\",\n      box: {},\n      route: \"signin\"\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.state.route !== \"signin\" ? this.login() : this.logOut());\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/andres/Desktop/facerecognition/src/App.js"],"names":["React","Component","Navigation","Logo","ImageLinkForm","FaceRecognition","Particles","Rank","Clarifai","SignIn","app","App","apiKey","particlesOption","particles","number","value","density","enable","value_area","constructor","pushed","event","state","route","setState","onInputChange","input","target","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","console","log","image","document","getElementById","widthImage","Number","width","heightImage","height","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","leftCol","left_col","displayFaceBox","box","onButtonSubmit","imageURL","models","predict","FACE_DETECT_MODEL","then","response","catch","err","logIn","logOut","render","display","flexDirection","login"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport \"tachyons\";\nimport Particles from 'react-particles-js';\nimport Rank from './components/Rank/Rank';\nimport Clarifai from 'clarifai';\nimport SignIn from './components/SignIn/SignIn';\n\n\nconst app = new Clarifai.App({\n apiKey: 'a5859fd113154c43a55a9bd841ca1987'\n});\n\nconst particlesOption = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 200,\n      }\n    }\n  }\n}\n\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {\n      input: \"\",\n      imageURL: \"\",\n      box: {},\n      route: \"signin\"\n    }\n  }\n\n  pushed = (event) => {\n    this.state.route === \"signin\"?\n      this.setState({ route: \"signedin\" }):\n      this.setState({ route: \"signin\" })\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value })\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    console.log(clarifaiFace)\n    const image = document.getElementById(\"image\");\n    const widthImage = Number(image.width);\n    const heightImage = Number(image.height);    \n\n    return {\n      topRow: clarifaiFace.top_row * heightImage,\n      rightCol: widthImage - (clarifaiFace.right_col * widthImage),\n      bottomRow: heightImage - (clarifaiFace.bottom_row * heightImage),\n      leftCol: clarifaiFace.left_col * widthImage, \n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({ box: box })\n  } \n\n  onButtonSubmit = (event) => {\n    this.setState({ imageURL: this.state.input })\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n      .catch(err => console.log(\"Error\", err))\n  }\n \n  logIn = () => {\n    return(\n      <div>\n        <Navigation pushed={ this.pushed } />\n        <Particles className=\"particles\" params={ particlesOption } />\n        <Logo />\n        <Rank />\n        <ImageLinkForm onInputChange={ this.onInputChange } onButtonSubmit={ this.onButtonSubmit }/>\n        <FaceRecognition box={ this.state.box }image={ this.state.imageURL }/>            \n      </div>\n    );\n  }\n\n  logOut = () => {\n    return(\n      <SignIn pushed={ this.pushed } />\n    );\n  }\n\n  render(){\n    return(\n      <div style={{display: \"flex\", flexDirection: \"column\"}}>\n        {\n          this.state.route !== \"signin\"?\n            this.login():\n            this.logOut()\n        }\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}